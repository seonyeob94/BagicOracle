--2025/06/24-2025/07/02

--카멜케이스 생성
    
SELECT COLUMN_NAME
, DATA_TYPE
, CASE WHEN DATA_TYPE='NUMBER' THEN 'private int ' || FN_GETCAMEL(COLUMN_NAME) || ';'
WHEN DATA_TYPE IN('VARCHAR2','CHAR') THEN 'private String ' || FN_GETCAMEL(COLUMN_NAME) || ';'
WHEN DATA_TYPE='DATE' THEN 'private Date ' || FN_GETCAMEL(COLUMN_NAME) || ';'
ELSE 'private String ' || FN_GETCAMEL(COLUMN_NAME) || ';'
END AS CAMEL_CASE
, '<result property="'||FN_GETCAMEL(COLUMN_NAME)||'" column="'||COLUMN_NAME||'"/>' RESULTMAP
, '#{' || FN_GETCAMEL(COLUMN_NAME) || '},'
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'CONTEST'
AND    OWNER = 'JSPEXAM';

--DROP TABLE TBL_USERS;
--DROP TABLE TBL_USERS_AUTH;

--로그인 시 사용될 회원 정보 테이블
CREATE TABLE TBL_USERS(
    ID NUMBER,
    EMAIL VARCHAR2(50),
    PASSWORD VARCHAR2(150),
    CREATED_AT DATE,
    UPDATED_AT DATE,
    NAME VARCHAR2(150),
    IMG_URL VARCHAR2(300),
    ACCESS_TOKEN VARCHAR2(100),
    ENABLED VARCHAR2(10),
    CONSTRAINT PK_TBL_USERS PRIMARY KEY(EMAIL)
);

--로그인 시 사용될 회원 권한 정보 테이블
CREATE TABLE TBL_USERS_AUTH(
   EMAIL VARCHAR2(50), 
   AUTH VARCHAR2(30),
   CONSTRAINT PK_TUA PRIMARY KEY(EMAIL, AUTH),
   CONSTRAINT FK_TUA FOREIGN KEY(EMAIL) REFERENCES TBL_USERS(EMAIL)
);

INSERT INTO TBL_USERS(ID, EMAIL, PASSWORD, CREATED_AT, UPDATED_AT, NAME, IMG_URL, ACCESS_TOKEN, ENABLED)
VALUES(1, 'admin@test.com', '$2a$10$yTW3BaUDDBmo.XNJkGFWB./K0gp8wQqYQx9JwHKCn2HkatimD7ApK', SYSDATE, NULL, '개똥이', null, null, '1');
INSERT INTO TBL_USERS(ID, EMAIL, PASSWORD, CREATED_AT, UPDATED_AT, NAME, IMG_URL, ACCESS_TOKEN, ENABLED)
VALUES(2, 'test@test.com', '$2a$10$yTW3BaUDDBmo.XNJkGFWB./K0gp8wQqYQx9JwHKCn2HkatimD7ApK', SYSDATE, NULL, '테스터', null, null, '1');

INSERT INTO TBL_USERS_AUTH(EMAIL,AUTH) VALUES('admin@test.com', 'ROLE_ADMIN');
INSERT INTO TBL_USERS_AUTH(EMAIL,AUTH) VALUES('admin@test.com', 'ROLE_MEMBER');
INSERT INTO TBL_USERS_AUTH(EMAIL,AUTH) VALUES('test@test.com', 'ROLE_MEMBER');

COMMIT;

--모든 행과 열이 조합이 됨
--오라클 사투리 : 카티전 프로덕트->EQUI JOIN(동등조인)
SELECT A.ID, A.EMAIL, A.PASSWORD, A.CREATED_AT, A.UPDATED_AT
     , A.NAME, A.IMG_URL, A.ACCESS_TOKEN, A.ENABLED
     , B.AUTH
FROM   TBL_USERS A, TBL_USERS_AUTH B
WHERE  A.EMAIL = B.EMAIL
AND    A.EMAIL = 'admin@test.com'
;
--ANSI표준 : CROSS JOIN->INNER JOIN(내부조인)
SELECT A.ID, A.EMAIL, A.PASSWORD, A.CREATED_AT, A.UPDATED_AT
     , A.NAME, A.IMG_URL, A.ACCESS_TOKEN, A.ENABLED
     , B.AUTH
FROM   TBL_USERS A INNER JOIN TBL_USERS_AUTH B
ON(A.EMAIL = B.EMAIL)
WHERE  A.EMAIL = 'admin@test.com';




--업데이트는 쎄대여
UPDATE TBL_USERS
SET    FILE_GROUP_NO = '20250625001'
WHERE  EMAIL = 'admin@test.com';

SELECT * 
FROM   TBL_USERS
WHERE  EMAIL = 'admin@test.com';


ROLLBACK;
/
/*
FUNCTION 명 : FN_GET_FILE_SALVE_LOCATE
테이블 : TBL_USERS, FILE_GROUP
파라미터 : P_EMAIL
리턴값 : FILE_SAVE_LOCATE의 값
*/
/
SET SERVEROUTPUT ON;
/
CREATE OR REPLACE FUNCTION FN_GET_FILE_SAVE_LOCATE(P_EMAIL VARCHAR2)
    RETURN VARCHAR2
IS
    --REFERENCE 변수 : 테이블명.컬럼의 타입(크기)
    --V_FILE_SAVE_LOCATE FILE_DETAIL.FILE_SAVE_LOCATE%TYPE;
    --SCALAR 변수
    V_FILE_SAVE_LOCATE VARCHAR2(100);
BEGIN
    
    --PL/SQL에서 SELECT절과 INTO구문은 함께 써야함
    SELECT A.FILE_SAVE_LOCATE INTO V_FILE_SAVE_LOCATE
    FROM   FILE_DETAIL A
    WHERE  A.FILE_GROUP_NO = (
            SELECT B.FILE_GROUP_NO FROM TBL_USERS B WHERE B.EMAIL = P_EMAIL
        )
    AND A.FILE_SN = 1;
    
    DBMS_OUTPUT.PUT_LINE('V_FILE_SAVE_LOCATE : ' || V_FILE_SAVE_LOCATE);
    
    RETURN V_FILE_SAVE_LOCATE;
END;
/
SELECT FN_GET_FILE_SAVE_LOCATE('admin@test.com') FROM DUAL;
SELECT NVL(FN_GET_FILE_SAVE_LOCATE('test@test.com'), '/images/defaultProFile.jpg') FROM DUAL;
SELECT NVL(FN_GET_FILE_SAVE_LOCATE('admin@test.com'),'/defaultProfile.jpg') 
      	FROM   DUAL
SELECT B.FILE_GROUP_NO FROM TBL_USERS B WHERE B.EMAIL = 'admin@test.com'


SELECT PRODUCT_ID, PNAME, UNIT_PRICE, DESCRIPTION, MANUFACTURER
     , CATEGORY, UNITS_IN_STOCK, CONDITION, FILENAME
     , TRUNC(DBMS_RANDOM.VALUE(2,10)) QUANTITY
     , FILENAME2, FILE_GROUP_NO 
FROM  PRODUCT
WHERE PRODUCT_ID <= 'P1239';



--배송 정보
CREATE TABLE SHIPPING_INFO(
    EMAIL VARCHAR2(50),
    SEQ NUMBER,
    SHIPPING_DATE DATE,
    ZIP_CODE VARCHAR2(10),
    ADDRESS_NAME VARCHAR2(300),
    ADDRESS_DET_NAME VARCHAR2(1000),
    CONSTRAINT PK_SHIPPING_INFO PRIMARY KEY(EMAIL,SEQ)
);

--장바구니
CREATE TABLE CART(
    CART_ID VARCHAR2(30),
    EMAIL VARCHAR2(50),
    CART_DATE NUMBER,
    CONSTRAINT PK_CART PRIMARY KEY(CART_ID)
);

--장바구니 상세
CREATE TABLE CART_DET(
    CART_ID VARCHAR2(30),
    PRODUCT_ID VARCHAR2(20),
    UNIT_PRICE NUMBER,
    QUANTITY NUMBER,
    CONSTRAINT PK_CART_DET PRIMARY KEY(CART_ID,PRODUCT_ID),
    CONSTRAINT FK_CART_DET FOREIGN KEY(CART_ID)
        REFERENCES CART(CART_ID),
    CONSTRAINT FK_CART_DET2 FOREIGN KEY(PRODUCT_ID)
        REFERENCES PRODUCT(PRODUCT_ID)
);

--주문(영수증)
CREATE TABLE ORDER_INFO(
    ORDER_NO NUMBER,
    EMAIL VARCHAR2(50),
    SEQ NUMBER,
    CART_ID VARCHAR2(30),
    AMT NUMBER,
    CONSTRAINT PK_ORDER_INFO PRIMARY KEY(ORDER_NO),
    CONSTRAINT FK_ORDER_INFO FOREIGN KEY(EMAIL, SEQ)
        REFERENCES SHIPPING_INFO(EMAIL, SEQ),
    CONSTRAINT FK_ORDER_INFO2 FOREIGN KEY(CART_ID)
        REFERENCES CART(CART_ID)
);


--컬럼의 자료형 바꾸기 (ADD, MODIFY, DROP)
--ALTER TABLE CART
--MODIFY CART_DATE DATE;
/
DESC CART;

/
INSERT ALL
    INTO LPROD(LPROD_ID, LPROD_GU, LPROD_NM, FILE_NAME)
    VALUES(291, 'D101', '빙과류01',NULL)
    
    INTO LPROD(LPROD_ID, LPROD_GU, LPROD_NM, FILE_NAME)
    VALUES(292, 'D102', '빙과류02',NULL)
    
    INTO LPROD(LPROD_ID, LPROD_GU, LPROD_NM, FILE_NAME)
    VALUES(293, 'D103', '빙과류03',NULL)
SELECT * FROM DUAL;
/

ROLLBACK;
/

SELECT COLUMN_NAME
, DATA_TYPE
, CASE WHEN DATA_TYPE='NUMBER' THEN 'private int ' || FN_GETCAMEL(COLUMN_NAME) || ';'
WHEN DATA_TYPE IN('VARCHAR2','CHAR') THEN 'private String ' || FN_GETCAMEL(COLUMN_NAME) || ';'
WHEN DATA_TYPE='DATE' THEN 'private Date ' || FN_GETCAMEL(COLUMN_NAME) || ';'
ELSE 'private String ' || FN_GETCAMEL(COLUMN_NAME) || ';'
END AS CAMEL_CASE
, '<result property="'||FN_GETCAMEL(COLUMN_NAME)||'" column="'||COLUMN_NAME||'"/>' RESULTMAP
, '#{' || FN_GETCAMEL(COLUMN_NAME) || '},'
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'ORDER_INFO'
AND    OWNER = 'JSPEXAM';

SELECT NVL(MAX(SEQ),0) + 1
FROM   SHIPPING_INFO
WHERE  EMAIL = 'admin@test.com';

-- 2 0 2 5 0 7 0 1
SELECT TO_CHAR(SYSDATE,'YYYYMMDD') FROM DUAL;
--ORDER_NO는 기본키, INDEX가 걸려있음. SUBSTR함수를 사용시 INDEX가 깨짐
--                                      검색 속도 저하
--ORDER_NO :                    20250701002
--TO_CHAR(SYSDATE,'YYYYMMDD') : 20250701
SELECT  NVL(MAX(ORDER_NO),TO_CHAR(SYSDATE,'YYYYMMDD')|| '000') + 1
FROM    ORDER_INFO
WHERE   ORDER_NO LIKE TO_CHAR(SYSDATE,'YYYYMMDD')|| '%';
    --20250701002 LIKE 20250701 || '%'
--WHERE   ORDER_NO = TO_CHAR(SYSDATE,'YYYYMMDD')

--PK_CART
--USER_CONSTRAINTS : 시스템 뷰 테이블(사용자가 만든 제약사항을 확인)
SELECT *
FROM   USER_CONSTRAINTS
WHERE  CONSTRAINT_NAME = 'PK_CART';

--장바구니가 있고 주문가능
--장바구니가 없이 주문가능(상품 개별 주문)
--ORDER_INFO 테이블의 모든 정보를 출력
SELECT  A.ORDER_NO, A.EMAIL, A.SEQ, A.CART_ID, A.AMT
      , B.CART_ID, B.EMAIL, B.CART_DATE
      , C.CART_ID, C.PRODUCT_ID, C.UNIT_PRICE, C.QUANTITY
FROM    ORDER_INFO A, CART B, CART_DET C
WHERE   A.CART_ID = B.CART_ID(+)
AND     B.CART_ID = C.CART_ID(+)
AND     B.EMAIL = 'test@test.com'
ORDER BY A.ORDER_NO DESC;
--ANSI표준
SELECT  A.ORDER_NO, A.EMAIL, A.SEQ, A.CART_ID, A.AMT
      , B.CART_ID, B.EMAIL, B.CART_DATE
      , C.CART_ID, C.PRODUCT_ID, C.UNIT_PRICE, C.QUANTITY
FROM    ORDER_INFO A LEFT OUTER JOIN CART B ON(A.CART_ID = B.CART_ID)
                     LEFT OUTER JOIN CART_DET C ON(B.CART_ID = C.CART_ID)
WHERE   B.EMAIL = 'test@test.com'
ORDER BY A.ORDER_NO DESC;

--파일이 없어도 PRODUCT 정보는 볼 수 있음(LEFT OUTER JOIN)
SELECT A.PRODUCT_ID, A.PNAME
     , A.UNIT_PRICE
     , TO_CHAR(A.UNIT_PRICE,'L999,999,999') UNIT_PRICE_STR
     , A.DESCRIPTION, A.MANUFACTURER
     , A.CATEGORY
     , A.UNITS_IN_STOCK
     , TO_CHAR(A.UNITS_IN_STOCK,'L999,999,999') UNITS_IN_STOCK_STR
     , A.CONDITION, A.FILENAME, A.QUANTITY
     , A.FILE_GROUP_NO
     , B.FILE_REGDATE
     , C.FILE_SN, C.FILE_ORIGINAL_NAME, C.FILE_SAVE_NAME
     , C.FILE_SAVE_LOCATE, C.FILE_SIZE, C.FILE_EXT, C.FILE_MIME
     , C.FILE_FANCYSIZE, C.FILE_SAVE_DATE, C.FILE_DOWNCOUNT
FROM   PRODUCT A LEFT OUTER JOIN FILE_GROUP  B ON(A.FILE_GROUP_NO = B.FILE_GROUP_NO)
                 LEFT OUTER JOIN FILE_DETAIL C ON(B.FILE_GROUP_NO = C.FILE_GROUP_NO)
WHERE  A.PRODUCT_ID = 'P1234';

--product
SELECT A.PRODUCT_ID, A.PNAME
		     , A.UNIT_PRICE
		     , TO_CHAR(A.UNIT_PRICE,'L999,999,999') UNIT_PRICE_STR
		     , A.DESCRIPTION, A.MANUFACTURER
		     , A.CATEGORY
		     , A.UNITS_IN_STOCK
		     , TO_CHAR(A.UNITS_IN_STOCK,'999,999,999') UNITS_IN_STOCK_STR
		     , A.CONDITION, A.FILENAME, A.QUANTITY
		     , A.FILE_GROUP_NO
		     , B.FILE_REGDATE
		     , C.FILE_SN, C.FILE_ORIGINAL_NAME, C.FILE_SAVE_NAME
		     , C.FILE_SAVE_LOCATE, C.FILE_SIZE, C.FILE_EXT, C.FILE_MIME
		     , C.FILE_FANCYSIZE, C.FILE_SAVE_DATE, C.FILE_DOWNCOUNT
		FROM   PRODUCT A LEFT OUTER JOIN FILE_GROUP  B ON(A.FILE_GROUP_NO = B.FILE_GROUP_NO)
		                 LEFT OUTER JOIN FILE_DETAIL C ON(B.FILE_GROUP_NO = C.FILE_GROUP_NO)
    	WHERE	1=1
    	AND		A.DEL_YN IS NULL
    	ORDER BY 1


CREATE TABLE BOM(
    ITEM_ID NUMBER,-- 품목식별자 
    PARENT_ID NUMBER,-- 상위품목 식별자 
    ITEM_NAME VARCHAR2(60),-- 품목이름 
    ITEM_QTY NUMBER,-- 품목 개수 
    CONSTRAINT PK_BOM PRIMARY KEY(ITEM_ID)
); 

INSERT INTO BOM VALUES ( 1001, NULL, '컴퓨터', 1);
INSERT INTO BOM VALUES ( 1002, 1001, '본체', 1);
INSERT INTO BOM VALUES ( 1003, 1001, '모니터', 1);
INSERT INTO BOM VALUES ( 1004, 1001, '프린터', 1);

INSERT INTO BOM VALUES ( 1005, 1002, '메인보드', 1);
INSERT INTO BOM VALUES ( 1006, 1002, '랜카드', 1);
INSERT INTO BOM VALUES ( 1007, 1002, '파워서플라이', 1);
INSERT INTO BOM VALUES ( 1008, 1005, 'CPU', 1);
INSERT INTO BOM VALUES ( 1009, 1005, 'RAM', 1);
INSERT INTO BOM VALUES ( 1010, 1005, '그래픽카드', 1);
INSERT INTO BOM VALUES ( 1011, 1005, '기타장치', 1);

COMMIT;
/
SELECT *
FROM BOM;

SELECT ITEM_ID
     , PARENT_ID
     , LPAD('ㄴ',2*(LEVEL-1)) || ITEM_NAME
     , ITEM_QTY
     , LEVEL
FROM BOM
START WITH PARENT_ID IS NULL
CONNECT BY PRIOR ITEM_ID = PARENT_ID;


--P.K는 NOT NULL, NO DUPLICATE
--F.K는 NULL을 허용해요
CREATE TABLE TEST_BOARD(
    NUM NUMBER,
    TITLE VARCHAR2(150),
    WRITER VARCHAR2(90),
    PARENT_NUM NUMBER,
    CONSTRAINT PK_TEST_BOARD PRIMARY KEY(NUM),
    CONSTRAINT FK_TEST_BOARD FOREIGN KEY(PARENT_NUM) REFERENCES TEST_BOARD(NUM)
);

INSERT INTO TEST_BOARD VALUES(1,'여름은 더워','홍길동',NULL);
INSERT INTO TEST_BOARD VALUES(2,'맞아 더워','김철수',1);
INSERT INTO TEST_BOARD VALUES(3,'그래서 여름이지','홍길동',1);
INSERT INTO TEST_BOARD VALUES(4,'정말 그래','노홍철',3);
INSERT INTO TEST_BOARD VALUES(5,'그래 정말','지상철',4);
INSERT INTO TEST_BOARD VALUES(6,'말장난 하지마','노홍철',4);
INSERT INTO TEST_BOARD VALUES(7,'말장난 좋은걸','지상철',4);
INSERT INTO TEST_BOARD VALUES(8,'그러게','하정우',3);
INSERT INTO TEST_BOARD VALUES(9,'가을아 와라','김진수',3);
INSERT INTO TEST_BOARD VALUES(10,'그래도 여름이 좋아','박명수',1);

COMMIT;
/
SELECT NUM
     , LPAD('ㄴ',2*(LEVEL-1)) || TITLE AS TITLE
     , WRITER
     , PARENT_NUM
FROM TEST_BOARD
START WITH PARENT_NUM IS NULL
CONNECT BY PRIOR NUM = PARENT_NUM;

SELECT *
FROM TEST_BOARD

SELECT NUM
     , LPAD('ㄴ',2*(LEVEL-1),'ㄴ') || TITLE
     , WRITER, PARENT_NUM, LEVEL
FROM   TEST_BOARD
START WITH PARENT_NUM IS NULL
CONNECT BY PRIOR NUM = PARENT_NUM;
/
--list
SELECT  NUM, TITLE, WRITER, PARENT_NUM
FROM    TEST_BOARD
WHERE   PARENT_NUM IS NULL
ORDER BY NUM DESC;
--해당 부모글의 대댓글, 최신순으로 정렬
SELECT A.NUM
     , LPAD('ㄴ',2*(LEVEL-1)) || TITLE
     , A.WRITER
     , (SELECT B.NAME FROM TBL_USERS B WHERE B.EMAIL = A.WRITER) NAME
     , (
            SELECT C.FILE_SAVE_LOCATE FROM FILE_DETAIL C 
            WHERE  C.FILE_GROUP_NO = (
                    SELECT D.FILE_GROUP_NO FROM TBL_USERS D WHERE D.EMAIL = A.WRITER
                )
        ) FILE_SAVE_LOCATE
     , PARENT_NUM, LEVEL
FROM   TEST_BOARD A
START WITH A.PARENT_NUM IS NULL AND NUM = 11
CONNECT BY PRIOR A.NUM = A.PARENT_NUM
;

SELECT B.NAME FROM TBL_USERS B WHERE B.EMAIL = 'admin@test.com';
--이메일주소를 알면 -> 프로필 이미지를 얻을 수 있음
SELECT C.FILE_SAVE_LOCATE FROM FILE_DETAIL  C
WHERE  C.FILE_GROUP_NO = (
        SELECT D.FILE_GROUP_NO FROM TBL_USERS D WHERE D.EMAIL = 'admin@test.com'
);

SELECT D.FILE_GROUP_NO FROM TBL_USERS D WHERE D.EMAIL = 'admin@test.com';

--TEST_BOARD 테이블의 WRITER 컬럼의 이름을 
--TBL_USERS 테이블의 EMAIL 컬럼의 값으로 UPDATE 처리해보자
SELECT  A.WRITER
      , (SELECT B.EMAIL FROM TBL_USERS B WHERE B.NAME = A.WRITER) EMAIL 
FROM    TEST_BOARD A;
/

SELECT A.NUM, A.TITLE
     , (SELECT B.NAME FROM TBL_USERS B WHERE B.EMAIL = A.WRITER) NAME
     , A.PARENT_NUM
FROM   TEST_BOARD A
WHERE  A.PARENT_NUM IS NULL
ORDER BY A.NUM DESC;
      
SELECT B.NAME FROM TBL_USERS B WHERE B.EMAIL = 'admin@test.com';
--상관관계 서브쿼리(CORRED RELATED SUBQUERY)
--A 테이블의 특정 컬럼이 B 테이블의 조건으로 사용(1)
--동시에 B테이블의 결과(2) A테이블에 영향을 미침(3)
UPDATE  TEST_BOARD A
SET     A.WRITER = (
    SELECT  B.EMAIL
    FROM    TBL_USERS B
    WHERE   B.NAME = A.WRITER
);

SELECT * FROM TEST_BOARD
COMMIT;
/
DECLARE
    --PL/SQL변수 : SCALAR(일반), REFERENCE(참조), BIND, ARRAY(배열)
    --샘플 작성자(WRITER) 데이터
    TYPE WRITER_ARRAY IS VARRAY(16) OF VARCHAR2(90);
    WRITERS WRITER_ARRAY := WRITER_ARRAY('강경모','강보람','김석원','김준서','이민기','이선엽','이승호','이지은','장세진','정성호','정연우','정한얼','조진원','주태현','최예찬','홍석현');
    
    --샘플 제목(TITLE) 데이터
    TYPE TITLE_ARRAY IS VARRAY(10) OF VARCHAR2(150);
    TITLES TITLE_ARRAY := TITLE_ARRAY('오늘 날씨 좋네요', '점심 메뉴 추천', '퇴근하고 싶어요', '주말 계획 공유해요', '코딩은 즐거워', '이 드라마 보셨나요?', '오늘의 TMI', '궁금한 게 있습니다', '좋은 하루 되세요!', '다들 힘내세요!');
    
    V_WRITER VARCHAR2(90);
    V_TITLE VARCHAR2(150);
    P_PARENT_NUM NUMBER;
BEGIN
    --i : 자동선언 정수형 변수
    FOR i IN 11..210 LOOP
        V_WRITER := WRITERS(TRUNC(DBMS_RANDOM.VALUE(1,WRITERS.COUNT +1)));
        V_TITLE  := TITLES(TRUNC(DBMS_RANDOM.VALUE(1,TITLES.COUNT +1)));
        
        --부모글 생성(20% 확률) DBMS_RANDOM.VALUE : 0-1
        --자식글 생성(80% 확률)
        IF DBMS_RANDOM.VALUE() < 0.2 THEN 
            P_PARENT_NUM := NULL;
        ELSE
            --i : 73 => 부모 번호는 1-72 사이의 값
            P_PARENT_NUM := TRUNC(DBMS_RANDOM.VALUE(1,i));
        END IF;
        
        INSERT INTO TEST_BOARD(NUM, TITLE, WRITER, PARENT_NUM)
        VALUES(i, V_TITLE || ' (' ||i|| ')',V_WRITER,P_PARENT_NUM);
    END LOOP
    
    COMMIT;
    
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('오류발생 : ' || SQLERRM);
END;
/

SELECT 'APPLE' 
    ,LPAD('APPLE',7,'ㄴ') RSLTL
    ,RPAD('APPLE',7,'ㄴ') RSLTR
FROM DUAL;

Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (3,'hgd@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'홍길동',null,null,'1',20250102001);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (4,'kcs@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'김철수',null,null,'1',20250102002);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (5,'hgc@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'노홍철',null,null,'1',20250102003);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (6,'jsc@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'지상철',null,null,'1',20250102004);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (7,'hjw@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'하정우',null,null,'1',20250102005);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (8,'kjsu@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'김진수',null,null,'1',20250102006);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (9,'pms@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'박명수',null,null,'1',20250102007);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (10,'hsh@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'홍석현',null,null,'1',20250102008);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (11,'lje@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'이지은',null,null,'1',20250102009);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (12,'ksw@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'김석원',null,null,'1',20250102010);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (13,'jth@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'주태현',null,null,'1',20250102011);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (14,'jhu@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'정한얼',null,null,'1',20250102012);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (15,'kbr@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'강보람',null,null,'1',20250102013);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (16,'jyw@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'정연우',null,null,'1',20250102014);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (17,'lsy@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'이선엽',null,null,'1',20250102015);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (18,'lsh@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'이승호',null,null,'1',20250102016);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (19,'cyc@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'최예찬',null,null,'1',20250102017);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (20,'jsj@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'장세진',null,null,'1',20250102018);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (21,'gkm@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'강경모',null,null,'1',20250102019);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (22,'jjw@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'조진원',null,null,'1',20250102020);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (23,'jsh@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'정성호',null,null,'1',20250102021);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (24,'lmg@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'이민기',null,null,'1',20250102022);
Insert into TBL_USERS (ID,EMAIL,PASSWORD,CREATED_AT,UPDATED_AT,NAME,IMG_URL,ACCESS_TOKEN,ENABLED,FILE_GROUP_NO) values (25,'kjs@test.com','$2a$10$TsU7gGWBWnIgRn.Gmxoi/uDJDgxWaH.T9CHJxBtdahT.q5NuLB/eO',to_date('2025/07/02','yyyy/MM/DD'),null,'김준서',null,null,'1',20250102023);

Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('cyc@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('gkm@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('hgc@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('hgd@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('hjw@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('hsh@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('jhu@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('jjw@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('jsc@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('jsh@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('jsj@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('jth@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('jyw@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('kbr@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('kcs@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('kjs@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('kjsu@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('ksw@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('lje@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('lmg@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('lsh@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('lsy@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('pms@test.com','ROLE_MEMBER');
Insert into TBL_USERS_AUTH (EMAIL,AUTH) values ('test@test.com','ROLE_MEMBER');

Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102001,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102002,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102003,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102004,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102005,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102006,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102007,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102008,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102009,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102010,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102011,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102012,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102013,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102014,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102015,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102016,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102017,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102018,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102019,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102020,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102021,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102022,to_date('2025/01/02','yyyy/MM/DD'));
Insert into FILE_GROUP (FILE_GROUP_NO,FILE_REGDATE) values (20250102023,to_date('2025/01/02','yyyy/MM/DD'));


Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102001,'20250102001.jpg','20250102001.jpg','/images/20250102001.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102002,'20250102002.jpg','20250102002.jpg','/images/20250102002.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102003,'20250102003.jpg','20250102003.jpg','/images/20250102003.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102004,'20250102004.jpg','20250102004.jpg','/images/20250102004.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102005,'20250102005.jpg','20250102005.jpg','/images/20250102005.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102006,'20250102006.jpg','20250102006.jpg','/images/20250102006.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102007,'20250102007.jpg','20250102007.jpg','/images/20250102007.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102008,'20250102008.jpg','20250102008.jpg','/images/20250102008.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102009,'20250102009.jpg','20250102009.jpg','/images/20250102009.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102010,'20250102010.jpg','20250102010.jpg','/images/20250102010.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102011,'20250102011.jpg','20250102011.jpg','/images/20250102011.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102012,'20250102012.jpg','20250102012.jpg','/images/20250102012.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102013,'20250102013.jpg','20250102013.jpg','/images/20250102013.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102014,'20250102014.jpg','20250102014.jpg','/images/20250102014.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102015,'20250102015.jpg','20250102015.jpg','/images/20250102015.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102016,'20250102016.jpg','20250102016.jpg','/images/20250102016.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102017,'20250102017.jpg','20250102017.jpg','/images/20250102017.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102018,'20250102018.jpg','20250102018.jpg','/images/20250102018.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102019,'20250102019.jpg','20250102019.jpg','/images/20250102019.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102020,'20250102020.jpg','20250102020.jpg','/images/20250102020.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102021,'20250102021.jpg','20250102021.jpg','/images/20250102021.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102022,'20250102022.jpg','20250102022.jpg','/images/20250102022.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);
Insert into FILE_DETAIL (FILE_SN,FILE_GROUP_NO,FILE_ORIGINAL_NAME,FILE_SAVE_NAME,FILE_SAVE_LOCATE,FILE_SIZE,FILE_EXT,FILE_MIME,FILE_FANCYSIZE,FILE_SAVE_DATE,FILE_DOWNCOUNT) values (1,20250102023,'20250102023.jpg','20250102023.jpg','/images/20250102023.jpg',6921,'jpg','image/jpeg',null,to_date('2025/07/02','yyyy/MM/DD'),0);

commit;



