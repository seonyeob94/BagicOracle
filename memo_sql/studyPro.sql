CREATE TABLE HIGH_SCHOOL (
    HS_ID              NUMBER          NOT NULL, -- 고등학교ID
    HS_CODE            VARCHAR2(20)    NOT NULL, -- 학교코드
    HS_NAME            VARCHAR2(100)   NOT NULL, -- 학교명
    HS_REGION_CODE     VARCHAR2(6)     NOT NULL, -- 시도코드
    HS_JURIS_CODE      VARCHAR2(6)     NOT NULL, -- 관할교육청 코드
    HS_FOUND_TYPE      VARCHAR2(6),              -- 설립유형
    HS_ZIPCODE         VARCHAR2(10),             -- 우편번호
    HS_ADDR            VARCHAR2(200),            -- 기본주소
    HS_ADDR_DETAIL     VARCHAR2(200),            -- 상세주소
    HS_TEL             VARCHAR2(20),             -- 전화번호
    HS_HOMEPAGE        VARCHAR2(300),            -- 홈페이지URL
    HS_COEDU_TYPE      VARCHAR2(6),              -- 남녀공학 구분
    HS_TYPE_NAME       VARCHAR2(20),             -- 학교종류구분 (일반/특성화 등)
    HS_GENERAL_TYPE    VARCHAR2(6),              -- 일반계/전문계
    HS_FOUND_DATE      DATE,                     -- 설립일자
    HS_ANNIV_AT        DATE,                     -- 개교기념일
    HS_LAT             NUMBER                    -- 위도
    HS_LOT             NUMBER                    -- 경도
);

-- PK 지정
ALTER TABLE HIGH_SCHOOL ADD CONSTRAINT PK_HIGH_SCHOOL PRIMARY KEY (HS_ID);

-- 코멘트 추가
COMMENT ON TABLE HIGH_SCHOOL IS '고등학교 기본정보';
COMMENT ON COLUMN HIGH_SCHOOL.HS_ID             IS '고등학교ID';
COMMENT ON COLUMN HIGH_SCHOOL.HS_CODE           IS '학교코드';
COMMENT ON COLUMN HIGH_SCHOOL.HS_NAME           IS '학교명';
COMMENT ON COLUMN HIGH_SCHOOL.HS_REGION_CODE    IS '시도코드';
COMMENT ON COLUMN HIGH_SCHOOL.HS_JURIS_CODE     IS '관할교육청 코드';
COMMENT ON COLUMN HIGH_SCHOOL.HS_FOUND_TYPE     IS '설립유형';
COMMENT ON COLUMN HIGH_SCHOOL.HS_ZIPCODE        IS '우편번호';
COMMENT ON COLUMN HIGH_SCHOOL.HS_ADDR           IS '기본주소';
COMMENT ON COLUMN HIGH_SCHOOL.HS_ADDR_DETAIL    IS '상세주소';
COMMENT ON COLUMN HIGH_SCHOOL.HS_TEL            IS '전화번호';
COMMENT ON COLUMN HIGH_SCHOOL.HS_HOMEPAGE       IS '홈페이지URL';
COMMENT ON COLUMN HIGH_SCHOOL.HS_COEDU_TYPE     IS '남녀공학 구분';
COMMENT ON COLUMN HIGH_SCHOOL.HS_TYPE_NAME      IS '학교종류구분';
COMMENT ON COLUMN HIGH_SCHOOL.HS_GENERAL_TYPE   IS '학교일반/전문계 구분';
COMMENT ON COLUMN HIGH_SCHOOL.HS_FOUND_DATE     IS '설립일자';
COMMENT ON COLUMN HIGH_SCHOOL.HS_ANNIV_AT       IS '개교기념일';
COMMENT ON COLUMN HIGH_SCHOOL.HS_LATS           IS '위도';
COMMENT ON COLUMN HIGH_SCHOOL.HS_LOT            IS '경도';
COMMENT ON COLUMN HIGH_SCHOOL.HS_DEL_YN            IS '삭제여부';
COMMENT ON COLUMN HIGH_SCHOOL_DEPT.HSD_DEL_YN            IS '삭제여부';


------------------------------------------------------------

CREATE TABLE HIGH_SCHOOL_DEPT (
    HSD_ID          NUMBER         NOT NULL, -- 학과ID
    HS_ID           NUMBER         NOT NULL, -- 고등학교ID (FK)
    HSD_CODE        VARCHAR2(6),             -- 학교코드
    HSD_NAME        VARCHAR2(100) NOT NULL, -- 학과명
    HSD_TRACK_NAME  VARCHAR2(6)             -- 계열명
);

-- PK 지정
ALTER TABLE HIGH_SCHOOL_DEPT ADD CONSTRAINT PK_HIGH_SCHOOL_DEPT PRIMARY KEY (HSD_ID);

-- FK 지정
ALTER TABLE HIGH_SCHOOL_DEPT ADD CONSTRAINT FK_HIGH_SCHOOL_DEPT_HS
FOREIGN KEY (HS_ID) REFERENCES HIGH_SCHOOL(HS_ID);

-- 코멘트 추가
COMMENT ON TABLE HIGH_SCHOOL_DEPT IS '고등학교 학과 정보';
COMMENT ON COLUMN HIGH_SCHOOL_DEPT.HSD_ID         IS '학과ID';
COMMENT ON COLUMN HIGH_SCHOOL_DEPT.HS_ID          IS '고등학교ID';
COMMENT ON COLUMN HIGH_SCHOOL_DEPT.HSD_CODE       IS '학교코드';
COMMENT ON COLUMN HIGH_SCHOOL_DEPT.HSD_NAME       IS '학과명';
COMMENT ON COLUMN HIGH_SCHOOL_DEPT.HSD_TRACK_NAME IS '계열명 (예: 인문, 자연계)';


-----------------------------------------------

CREATE TABLE COM_CODE_CL (
    CL_ID        VARCHAR2(3)   NOT NULL, -- 분류코드
    CL_NAME      VARCHAR2(100) NOT NULL, -- 분류코드명
    CL_DESC      VARCHAR2(200),          -- 분류코드설명
    USE_YN       CHAR(1)       NOT NULL, -- 사용여부
    CREATED_AT   DATE,                   -- 최초생성일시
    CREATED_BY   VARCHAR2(50),           -- 최초생성자
    UPDATED_AT   DATE,                   -- 최종수정일시
    UPDATED_BY   VARCHAR2(50)            -- 최종수정자
);

ALTER TABLE COM_CODE_CL ADD CONSTRAINT PK_COM_CODE_CL PRIMARY KEY (CL_ID);

-- COMMENTS
COMMENT ON TABLE COM_CODE_CL IS '공통분류코드';
COMMENT ON COLUMN COM_CODE_CL.CL_ID       IS '분류코드';
COMMENT ON COLUMN COM_CODE_CL.CL_NAME     IS '분류코드명';
COMMENT ON COLUMN COM_CODE_CL.CL_DESC     IS '분류코드설명';
COMMENT ON COLUMN COM_CODE_CL.USE_YN      IS '사용여부';
COMMENT ON COLUMN COM_CODE_CL.CREATED_AT  IS '최초생성일시';
COMMENT ON COLUMN COM_CODE_CL.CREATED_BY  IS '최초생성자';
COMMENT ON COLUMN COM_CODE_CL.UPDATED_AT  IS '최종수정일시';
COMMENT ON COLUMN COM_CODE_CL.UPDATED_BY  IS '최종수정자';

----------------------------------------------------------------

CREATE TABLE COM_CODE (
    CC_ID        VARCHAR2(6)   NOT NULL, -- 공통상세코드
    CL_CODE      VARCHAR2(3)   NOT NULL, -- 분류코드
    CC_NAME      VARCHAR2(100) NOT NULL, -- 공통상세코드명
    CC_ETC       VARCHAR2(200),          -- 공통상세코드설명
    USE_YN       CHAR(1)       NOT NULL, -- 사용여부
    CREATED_AT   DATE DEFAULT SYSDATE,   -- 최초생성일시
    CREATED_BY   VARCHAR2(50),           -- 최초생성자
    UPDATED_AT   DATE DEFAULT SYSDATE,   -- 최종수정일시
    UPDATED_BY   VARCHAR2(50)            -- 최종수정자
);

ALTER TABLE COM_CODE ADD CONSTRAINT PK_COM_CODE PRIMARY KEY (CC_ID);

-- FK
ALTER TABLE COM_CODE
ADD CONSTRAINT FK_COM_CODE_CL
FOREIGN KEY (CL_CODE) REFERENCES COM_CODE_CL(CL_ID);

-- COMMENTS
COMMENT ON TABLE COM_CODE IS '공통코드';
COMMENT ON COLUMN COM_CODE.CC_ID        IS '공통상세코드';
COMMENT ON COLUMN COM_CODE.CL_CODE      IS '분류코드';
COMMENT ON COLUMN COM_CODE.CC_NAME      IS '공통상세코드명';
COMMENT ON COLUMN COM_CODE.CC_ETC       IS '공통상세코드설명';
COMMENT ON COLUMN COM_CODE.USE_YN       IS '사용여부';
COMMENT ON COLUMN COM_CODE.CREATED_AT   IS '최초생성일시';
COMMENT ON COLUMN COM_CODE.CREATED_BY   IS '최초생성자';
COMMENT ON COLUMN COM_CODE.UPDATED_AT   IS '최종수정일시';
COMMENT ON COLUMN COM_CODE.UPDATED_BY   IS '최종수정자';

---------------------------------------------------------
--공통분류코드 INSERT
INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G21', '설립유형', '국공사립 구분', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G22', '교육청코드', '시도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G23', '시도명코드', '지역명 코드', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G24', '남녀공학구분', '남, 여, 공학', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G25', '학교종류', '초, 중, 고', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G26', '학교일반실업계구분', '일반고/실업계 등', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G27', '학과코드', '고등학교 학과 코드 구분', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G31', '고등학교학과계열 ', '고등학교 학과 계열 구분', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');


-----------------------------------------------------------------------------
--공통코드 INSERT

-- G21
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G21001', 'G21', '국립', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G21002', 'G21', '공립', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G21003', 'G21', '사립', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

-- G22
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22001', 'G22', 'B10', '서울특별시교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22002', 'G22', 'C10', '부산광역시교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22003', 'G22', 'D10', '대구광역시교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22004', 'G22', 'E10', '인천광역시교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22005', 'G22', 'F10', '광주광역시교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22006', 'G22', 'G10', '대전광역시교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22007', 'G22', 'H10', '울산광역시교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22008', 'G22', 'I10', '세종특별자치시교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22009', 'G22', 'J10', '경기도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22010', 'G22', 'K10', '강원특별자치도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22011', 'G22', 'M10', '충청북도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22012', 'G22', 'N10', '충청남도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22013', 'G22', 'P10', '전라북도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22014', 'G22', 'Q10', '전라남도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22015', 'G22', 'R10', '경상북도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22016', 'G22', 'S10', '경상남도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G22017', 'G22', 'T10', '제주특별자치도교육청', 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

-- G23
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23001', 'G23', '서울특별시', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23002', 'G23', '부산광역시', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23003', 'G23', '대구광역시', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23004', 'G23', '인천광역시', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23005', 'G23', '광주광역시', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23006', 'G23', '대전광역시', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23007', 'G23', '울산광역시', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23008', 'G23', '세종특별자치시', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23009', 'G23', '경기도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23010', 'G23', '강원특별자치도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23011', 'G23', '충청북도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23012', 'G23', '충청남도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23013', 'G23', '전라북도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23014', 'G23', '전라남도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23015', 'G23', '경상북도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23016', 'G23', '경상남도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G23017', 'G23', '제주특별자치도', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

-- G24
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G24001', 'G24', '남', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G24002', 'G24', '여', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G24003', 'G24', '남여공학', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

-- G25
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G25001', 'G25', '일반고', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G25002', 'G25', '특성화고', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G25003', 'G25', '자율고', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G25004', 'G25', '특목고', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

-- G26
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G26001', 'G26', '일반계', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');
INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G26002', 'G26', '전문계', NULL, 'Y', SYSDATE, 'admin', SYSDATE, 'admin');

COMMIT;


-------------------------
-- G32: 프로그램활동구분 (Program Activity Category)
INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G32', '프로그램활동구분', '프로그램 활동 유형을 분류하는 코드', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');

-- G34: 프로그램대상구분 (Program Target Category)
INSERT INTO COM_CODE_CL (CL_ID, CL_NAME, CL_DESC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G34', '프로그램대상구분', '프로그램 대상 유형을 분류하는 코드', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');


-- INSERT statements for COM_CODE (CL_ID: G32 - 프로그램활동구분)

INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G32001', 'G32', '공모전', NULL, 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');

INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G32002', 'G32', '서포터즈', NULL, 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');

INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G32003', 'G32', '봉사활동', NULL, 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');

INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G32004', 'G32', '인턴십', NULL, 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');


-- INSERT statements for COM_CODE (CL_ID: G34 - 프로그램대상구분)

INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G34001', 'G34', '전체', NULL, 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');

INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G34002', 'G34', '청소년', NULL, 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');

INSERT INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, CC_ETC, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
VALUES ('G34003', 'G34', '청년', NULL, 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY');

-- COMM_CODE 테이블에 G35 그룹 (공모전 분야) 코드 삽입

-- G35 그룹 코드 생성 (만약 G35 그룹 자체가 없다면 추가)
-- INSERT INTO COMM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATE_DATE)
-- VALUES ('G35', 'G35', '공모전 분야', 'Y', SYSDATE);

INSERT ALL
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35001', 'G35', '건축', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35002', 'G35', '게임/소프트웨어', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35003', 'G35', '과학', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35004', 'G35', '광고/마케팅', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35005', 'G35', '기획/아이디어', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35006', 'G35', '네이밍/슬로건', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35007', 'G35', '논문', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35008', 'G35', '대회', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35009', 'G35', '디자인', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35010', 'G35', '만화/캐릭터', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35011', 'G35', '문학/수기', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35012', 'G35', '미술', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35013', 'G35', '사진', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35014', 'G35', '영상/UCC', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35015', 'G35', '음악', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35016', 'G35', '이벤트', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35017', 'G35', '취업/창업', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
    INTO COM_CODE (CC_ID, CL_CODE, CC_NAME, USE_YN, CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY) VALUES ('G35018', 'G35', '해외', 'Y', SYSDATE, 'LSY', SYSDATE, 'LSY')
SELECT * FROM DUAL; -- DUAL 테이블을 사용하여 INSERT ALL 문을 완성


ALTER TABLE PAYMENT ADD (PAY_STATUS VARCHAR2(50) DEFAULT 'PENDING' NOT NULL);
ALTER TABLE PAYMENT ADD (MEM_SUB_ID NUMBER);
ALTER TABLE PAYMENT ADD (IMP_UID VARCHAR2(50) NOT NULL);
ALTER TABLE PAYMENT ADD (MERCHANT_UID VARCHAR2(100) NOT NULL);

ALTER TABLE MEMBER_SUBSCRIPTION MODIFY SUBSCRIBE_STATUS DROP DEFAULT;

COMMENT ON COLUMN PAYMENT.IMP_UID IS '결제 건별 고유 식별자';
COMMENT ON COLUMN PAYMENT.MERCHANT_UID IS '주문 건별 고유 식별자';
----------------------------------------------
-- MEMBER_SUBSCRIPTION 테이블을 위한 시퀀스 생성 (옵션)
CREATE SEQUENCE MEMBER_SUBSCRIPTION_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- MEMBER_SUBSCRIPTION 테이블 생성
CREATE TABLE MEMBER_SUBSCRIPTION (
    MS_ID           NUMBER          NOT NULL, -- 회원별 구독 ID (Primary Key)
    MEM_ID          NUMBER          NOT NULL, -- 회원 ID
    SUB_ID          NUMBER          NOT NULL, -- 구독 상품 ID
    CUSTOMER_UID    VARCHAR2(100)   NOT NULL, -- 아임포트 고객 고유 식별자 (빌링키 용도)
    SUB_STATUS      CHAR(1)         NOT NULL, -- 구독 상태 (예: 'Y' 활성, 'N' 비활성, 'R' 예약)
    NEXT_PAY_DT     DATE,                     -- 다음 결제 예정일
    SUB_START_DT    DATE            DEFAULT SYSDATE, -- 구독 시작일
    SUB_END_DT      DATE,                     -- 구독 종료일
    LAST_PAY_DT     DATE,                     -- 최종 결제 성공일
    RECUR_PAY_CNT   NUMBER          DEFAULT 0, -- 정기 결제 성공 횟수
    CREATED_DT      TIMESTAMP       DEFAULT SYSTIMESTAMP, -- 생성 일시
    UPDATED_DT      TIMESTAMP       DEFAULT SYSTIMESTAMP, -- 최종 수정 일시
    CONSTRAINT PK_MEMBER_SUBSCRIPTION PRIMARY KEY (MS_ID)
);

-- 테이블 및 컬럼 코멘트 추가 (Oracle에서만 사용 가능)
COMMENT ON TABLE MEMBER_SUBSCRIPTION IS '회원 구독 정보';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.MS_ID IS '회원별 구독 ID';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.MEM_ID IS '회원 ID';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.SUB_ID IS '구독 상품 ID';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.CUSTOMER_UID IS '고객 고유 식별자';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.SUB_STATUS IS '구독 상태';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.NEXT_PAY_DT IS '다음 결제 예정일';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.SUB_START_DT IS '구독 시작일';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.SUB_END_DT IS '구독 종료일';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.LAST_PAY_DT IS '최종 결제 성공일';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.RECUR_PAY_CNT IS '정기 결제 성공 횟수';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.CREATED_DT IS '생성 일시';
COMMENT ON COLUMN MEMBER_SUBSCRIPTION.UPDATED_DT IS '최종 수정 일시';

-------------------------------------------------------


-- PAYMENT 테이블을 위한 시퀀스 생성 (옵션)
CREATE SEQUENCE PAYMENT_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- PAYMENT 테이블 생성
CREATE TABLE PAYMENT (
    PAY_ID          NUMBER          NOT NULL, -- 결제 식별 번호 (Primary Key)
    PAY_DATE        DATE            DEFAULT SYSDATE, -- 결제일
    PAY_AMOUNT      NUMBER          NOT NULL, -- 구독 결제 금액
    PAY_RESUME_CNT  NUMBER,                   -- 이전 서술 횟수 (예측값, 정확한 의미는 추정 필요)
    PAY_CONSULT_CNT NUMBER,                   -- 상담 횟수 (예측값, 정확한 의미는 추정 필요)
    PAY_MOCK_CNT    NUMBER,                   -- 모의면접 횟수 (예측값, 정확한 의미는 추정 필요)
    MS_ID           NUMBER,                   -- 회원별 구독 고유 ID (Foreign Key로 예상)
    IMP_UID         VARCHAR2(50),             -- 결제 건별 고유 식별자 (아임포트 결제 고유번호)
    MERCHANT_UID    VARCHAR2(100),            -- 주문 번호 고유 식별자
    CONSTRAINT PK_PAYMENT PRIMARY KEY (PAY_ID)
);

-- 테이블 및 컬럼 코멘트 추가 (Oracle에서만 사용 가능)
COMMENT ON TABLE PAYMENT IS '결제 내역 정보';
COMMENT ON COLUMN PAYMENT.PAY_ID IS '결제 식별 번호';
COMMENT ON COLUMN PAYMENT.PAY_DATE IS '결제일';
COMMENT ON COLUMN PAYMENT.PAY_AMOUNT IS '구독 결제 금액';
COMMENT ON COLUMN PAYMENT.PAY_RESUME_CNT IS '이력서 작성 횟수'; -- 코멘트와 컬럼명 조합
COMMENT ON COLUMN PAYMENT.PAY_CONSULT_CNT IS '상담 횟수';
COMMENT ON COLUMN PAYMENT.PAY_MOCK_CNT IS '모의면접 횟수';
COMMENT ON COLUMN PAYMENT.PAY_ID IS '회원별 구독 고유 ID'; -- MS_ID에 대한 코멘트가 PAY_ID로 잘못 기록됨, 수정 필요
COMMENT ON COLUMN PAYMENT.MS_ID IS '회원별 구독 고유 ID'; -- 올바른 코멘트로 수정
COMMENT ON COLUMN PAYMENT.IMP_UID IS '결제 건별 고유 식별자';
COMMENT ON COLUMN PAYMENT.MERCHANT_UID IS '주문 번호 고유 식별자';

---------------------------------------------

-- BASIC 상품
INSERT INTO SUBSCRIBE (SUB_ID, SUB_NAME, SUB_PRICE, SUB_BENEFIT, SUB_ACTIVE_YN, SUB_ROLE) 
VALUES (1, 'BASIC', 100, '이 구독상품은 베이직 해택의 상품입니다,이 상품의 이력서첨삭횟수는 3회입니다,이 상품의 자소서첨삭횟수는 3회입니다,이 상품의 상담횟수는 3회입니다,이 상품의 모의면접횟수는 3회입니다', 'Y', 'BASIC');

-- PLUS 상품
INSERT INTO SUBSCRIBE (SUB_ID, SUB_NAME, SUB_PRICE, SUB_BENEFIT, SUB_ACTIVE_YN, SUB_ROLE) 
VALUES (2, 'PLUS', 200, '이 구독상품은 플러스 해택의 상품입니다,이 상품의 이력서첨삭횟수는 5회입니다,이 상품의 자소서첨삭횟수는 5회입니다,이 상품의 상담횟수는 5회입니다,이 상품의 모의면접횟수는 5회입니다', 'Y', 'PLUS');

-- PRO 상품
INSERT INTO SUBSCRIBE (SUB_ID, SUB_NAME, SUB_PRICE, SUB_BENEFIT, SUB_ACTIVE_YN, SUB_ROLE) 
VALUES (3, 'PRO', 300, '이 구독상품은 프로 해택의 상품입니다,이 상품의 이력서첨삭횟수는 8회입니다,이 상품의 자소서첨삭횟수는 8회입니다,이 상품의 상담횟수는 8회입니다,이 상품의 모의면접횟수는 8회입니다', 'Y', 'PRO');


-- 시퀀스 생성
CREATE SEQUENCE MEM_SUB_SEQ;
